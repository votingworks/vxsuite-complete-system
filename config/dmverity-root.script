#!/bin/sh
# goes in /etc/initramfs-tools/scripts/local-premount/dmverity-root
# This allows the dmverity root hash to be passed in on the command line.
#
# turn off "expressions don't expand in single quotes" and "can't follow non-constant sources"
# shellcheck disable=SC2016,SC1090,SC1091
# This file was borrowed from safeboot: https://github.com/osresearch/safeboot/blob/master/initramfs/scripts/dmverity-root

PREFIX="dmverity-root"

case $1 in
    prereqs)
        exit 0
        ;;
esac

. /scripts/functions

# Find our root hash and salt

HASH=""
#SALT=""
HASHDEV=""
DATADEV=""

if [ -z "${rootmnt}" ] ; then
	rootmnt=/root
fi

# shellcheck disable=SC2013
for arg in $(cat /proc/cmdline)
do
    case "$arg" in
        verity.hash=*)
            HASH=${arg#verity.hash=}
            ;;
#        verity.salt=*)
#            SALT=${arg#verity.salt=}
#            ;;
	verity.rootdev=*)
            DATADEV=${arg#verity.rootdev=}
            ;;
	verity.hashdev=*)
            HASHDEV=${arg#verity.hashdev=}
            ;;
        *)
            ;;
    esac
done

if [ "$HASH" = "" ] || [ "$DATADEV" = "" ] || [ "$HASHDEV" = "" ]
then
    log_warning_msg "$PREFIX: verity command line parameters not found; not enabling"
    exit 0
fi

log_begin_msg "$PREFIX: verity.hash=$HASH verity.rootdev=$DATADEV verity.hashdev=$HASHDEV"

if ! modprobe -qb dm_verity
then
    log_failure_msg "$PREFIX: unable to load dm_verity module"
    exit 0
fi


if ! veritysetup open "${DATADEV}" vroot "${HASHDEV}" "${HASH}"
then
	log_failure_msg "$PREFIX: ${DATADEV} unable to setup verity, remounting ${rootmnt}"
	panic "$PREFIX: failed veritysetup"
	#umount /hashes
	#mount -o ro ${ROOT} ${rootmnt}
	exit 0
fi

log_success_msg "$PREFIX: verified ${rootmnt} with root hash $HASH"

# also set the read-only flag on the hashes so that they are not tampered
# with accidentally while dmverity is running
blockdev --setro "${HASHDEV}"

exit 0
